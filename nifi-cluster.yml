apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-volume-conf-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-volume-state-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-volume-content-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-volume-provenance-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-volume-database-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-volume-flowfile-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Service             #+
apiVersion: v1            #+
metadata:                 #+
  name: nifi-service     #+
spec:                     #+
  selector:               #+
    app: nifi            #+
  ports:                  #+
  - protocol: TCP         #+
    targetPort: 8080     #+
    port: 8080              #+
    name: ui            #+
  - protocol: TCP         #+
    targetPort: 9088     #+
    port: 9088              #+
    name: node-protocol-port            #+
  - protocol: TCP         #+
    targetPort: 8888     #+
    port: 8888              #+
    name: s2s            #+
  type: LoadBalancer      #+
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nifi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: nifi-container
        image: apache/nifi:latest
        volumeMounts:
        - mountPath: "/opt/nifi/nifi-current/state"
          name: nifi-volume-state
        - mountPath: "/opt/nifi/nifi-current/conf"
          name: nifi-volume-conf
        - mountPath: "/opt/nifi/nifi-current/content_repository"
          name: nifi-volume-content
        - mountPath: "/opt/nifi/nifi-current/provenance_repository"
          name: nifi-volume-provenance
        - mountPath: "/opt/nifi/nifi-current/database_repository"
          name: nifi-volume-database
        - mountPath: "/opt/nifi/nifi-current/flowfile_repository"
          name: nifi-volume-flowfile
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 22
          name: ssh
        resources:
          requests:
            cpu: ".5"
            memory: "6Gi"
          limits:
            cpu: "1"
        env:
        - name: VERSION
          value: "1.9"
        - name: NIFI_CLUSTER_IS_NODE
          value: "true"
        - name: NIFI_CLUSTER_NODE_PROTOCOL_PORT
          value: "9088"
        - name: NIFI_ELECTION_MAX_CANDIDATES
          value: "1"
        - name: NIFI_ZK_CONNECT_STRING
          value: "nifi-zookeeper-0.nifi-zookeeper-headless:2181,nifi-zookeeper-1.nifi-zookeeper-headless:2181,nifi-zookeeper-2.nifi-zookeeper-headless:2181"
      volumes:
      - name: nifi-volume-conf
        persistentVolumeClaim:
          claimName: nifi-volume-conf-claim
      - name: nifi-volume-state
        persistentVolumeClaim:
          claimName: nifi-volume-state-claim
      - name: nifi-volume-content
        persistentVolumeClaim:
          claimName: nifi-volume-content-claim
      - name: nifi-volume-provenance
        persistentVolumeClaim:
          claimName: nifi-volume-provenance-claim
      - name: nifi-volume-database
        persistentVolumeClaim:
          claimName: nifi-volume-database-claim
      - name: nifi-volume-flowfile
        persistentVolumeClaim:
          claimName: nifi-volume-flowfile-claim